{"version":3,"sources":["App.js","AppTest.js","index.js"],"names":["PATH_BASE","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","App","props","setSearchKey","searchTerm","setState","searchKey","needsToSearchTopStories","state","results","error","isLoading","sortKey","isSortReverse","onSort","bind","setSearchTopStories","fetchSearchTopStories","onSearchChange","onDismiss","onSearchSubmit","this","result","hits","page","oldHits","updatedHits","event","target","value","id","filter","item","objectID","preventDefault","fetch","then","response","json","catch","className","onChange","onSubmit","onClick","Component","Search","children","type","largeColumn","width","midColumn","smallColumn","Table","sortedList","reverseSortedList","style","activeSortKey","map","key","href","url","title","author","num_comments","points","Sort","sortClass","push","join","Button","Loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8beb2173.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { sortBy } from \"lodash\";\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '5';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1'\n//create error path\n// const PATH_BASE = 'https://hn.thangnguyen.com/api/v1'\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse(),\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false,\n      sortKey: 'NONE',\n      isSortReverse: false,\n    };\n\n    this.onSort = this.onSort.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n\n  onSort(sortKey){\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({\n      sortKey, isSortReverse\n    })\n  }\n\n  setSearchTopStories(result){\n    const {hits, page} = result;\n    const {searchKey, results} = this.state;\n\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n\n    const updatedHits = [\n      ...oldHits,\n      ...hits\n    ]\n\n    this.setState({\n      isLoading: false,\n      results: {\n        ...results,\n        [searchKey]: {hits: updatedHits, page}\n      }\n    })\n  }\n\n  setSearchKey = searchTerm => {\n    this.setState({\n      searchKey: searchTerm,\n    })\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const {searchKey, results} = this.state;\n    const {hits, page} = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      // result: Object.assign({}, this.state.result, {hits: updatedHits})\n      results: {\n        ...results,\n        [searchKey]: {hits: updatedHits, page}\n      }\n    });\n  }\n\n  onSearchSubmit(event) {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if(this.state.results){\n      if(this.needsToSearchTopStories(searchTerm)){\n        this.fetchSearchTopStories(searchTerm);\n      }\n    }\n    this.setSearchKey(searchTerm);\n  }\n\n  needsToSearchTopStories = searchTerm => {\n    return !this.state.results[searchTerm];\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    this.setState({\n      isLoading: true,\n    })\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n    .then(response => response.json())\n    .then(result => this.setSearchTopStories(result))\n    .catch(error => this.setState({error}));\n  }\n\n  componentDidMount(){\n    const { searchTerm } = this.state;\n    this.setSearchKey(searchTerm);\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  render() {\n    const { \n      searchTerm, \n      results, \n      searchKey, \n      error, \n      isLoading,\n      sortKey,\n      isSortReverse\n    } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {\n          error ? \n          <div className=\"interaction\">\n            <p>Oops...</p>\n          </div>\n            : \n          <Table\n            list={list}\n            sortKey={sortKey}\n            onSort={this.onSort}\n            onDismiss={this.onDismiss}\n            isSortReverse={isSortReverse}\n          /> \n        }\n          <div className=\"interaction\">\n            {/* <ButtonWithLoading\n              isLoading = {isLoading}\n              onClick = {() => this.fetchSearchTopStories(searchKey, page + 1)}\n            >\n              More\n            </ButtonWithLoading> */}\n            {isLoading ? \n              <Loading/> : \n              <Button onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}>\n                More\n              </Button>\n            }\n            \n          </div> \n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit}>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n    <button type=\"submit\">{children} </button>\n  </form>\n\n\nconst largeColumn = {\n  width: '40%',\n};\n\nconst midColumn = {\n  width: '30%',\n};\n\nconst smallColumn = {\n  width: '10%',\n};\n\n// function isSearched(searchTerm){\n//   return function(item){\n//       return item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1;\n//   }\n// }\n\nconst Table = ({ \n  list, \n  sortKey,\n  isSortReverse,\n  onDismiss,\n  onSort,\n  }) => {\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse \n      ? sortedList \n      : sortedList.reverse();\n    return(\n    <div className=\"table\">\n      <div className=\"table-header\">\n        <span style={{width: '40%'}}>\n          <Sort\n            sortKey={'TITLE'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Title\n          </Sort>\n        </span>\n        <span style={{width: '30%'}}>\n          <Sort\n            sortKey={'AUTHOR'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Author\n          </Sort>\n        </span>\n        <span style={{width: '10%'}}>\n          <Sort\n            sortKey={'COMMENTS'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Comments\n          </Sort>\n        </span>\n        <span style={{width: '10%'}}>\n          <Sort\n            sortKey={'POINTS'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Points\n          </Sort>\n        </span>\n        <span style={{width: '10%'}}>\n            Archive\n        </span>\n      </div>\n      {reverseSortedList.map((item) => (\n        <div key={item.objectID} className=\"table-row\">\n          <span style={largeColumn}>\n            <a href={item.url}>{item.title}</a>\n          </span>\n          <span style={midColumn}>{item.author}</span>\n          <span style={smallColumn}>{item.num_comments}</span>\n          <span style={smallColumn}>{item.points}</span>\n          <span style={smallColumn}>\n            <Button\n              onClick={() => onDismiss(item.objectID)}\n              className=\"button-inline\"\n            >\n              Dismiss\n            </Button>\n          </span>\n        </div>\n      ))}\n    </div>\n)};\n\nconst Sort = ({\n  sortKey,\n  onSort,\n  activeSortKey,\n  children\n}) => {\n  const sortClass = ['button-inline'];\n  \n  if(sortKey === activeSortKey){\n    sortClass.push('button-active');\n  }\n  \n  return (\n  <Button \n    onClick = {() => onSort(sortKey)}\n    className={sortClass.join(' ')}\n  >\n    {children}\n  </Button>\n)}\n\nconst Button = ({ onClick, className = \"\", children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nconst Loading = () => {\n  return(\n    <div>\n      <h1>Loading ...</h1>\n    </div>\n  )\n}\n\nexport default App;","import React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: 'Jordan Belfort'\r\n    }\r\n  }\r\n\r\n  getData(){\r\n    setTimeout(() => {\r\n      console.log('Our data is fetched');\r\n      this.setState({\r\n        data: 'Hello WallStreet'\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n          {console.log(\"render: \" + this.state.data)}\r\n      {this.state.data}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppTest from './AppTest';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n"],"sourceRoot":""}